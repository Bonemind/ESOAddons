WF_QuestTools.CommandLine = function(text)	if not WF_QuestTools.Ready then return; end	if not text or text == "" or text == "help" then		d(WF_QuestTools.AddonName().." accepted commands:")		d("[QT] /"..WF_QuestTools.AddonAbbrev().."  << shows help")		d("[QT] /"..WF_QuestTools.AddonAbbrev().." list << lists all quests")		d("[QT] /"..WF_QuestTools.AddonAbbrev().." help << shows help")		d("[QT] /"..WF_QuestTools.AddonAbbrev().." help abandon << shows abandon quest help")		d("[QT] /"..WF_QuestTools.AddonAbbrev().." help share << shows share quest help")		--d("[QT] /"..WF_QuestTools.AddonAbbrev().." help track << shows track quest help")		d("[QT] To EDIT White and Black lists, please edit your /SavedVariables/mhQuestTools.lua file.")		return	end	if text == "help abandon" then		d("[QT] /"..WF_QuestTools.AddonAbbrev().."a << abandons last quest added")		d("[QT] /"..WF_QuestTools.AddonAbbrev().."a # << abandons specific quest")		d("[QT] /"..WF_QuestTools.AddonAbbrev().."bl << auto-abandons  last quest added")		d("[QT] /"..WF_QuestTools.AddonAbbrev().." clear blacklist << clears the auto-abandon list")		return	end	if text == "help share" then		d("[QT] /"..WF_QuestTools.AddonAbbrev().." always share << always shares every quest")		d("[QT] /"..WF_QuestTools.AddonAbbrev().."s << shares last quest added")		d("[QT] /"..WF_QuestTools.AddonAbbrev().."s # << shares specific quest")		d("[QT] /"..WF_QuestTools.AddonAbbrev().."wl << auto-shares last quest added")		d("[QT] /"..WF_QuestTools.AddonAbbrev().." clear whitelist << clears the auto-share list")		return	end	if text == "help track" then		d("[QT] /"..WF_QuestTools.AddonAbbrev().." always track << auto-tracks last quest added")		d("[QT] /"..WF_QuestTools.AddonAbbrev().."t << tracks last quest added")		d("[QT] /"..WF_QuestTools.AddonAbbrev().."t # << tracks specific quest")		d("[QT] /"..WF_QuestTools.AddonAbbrev().." track << tracks last quest added")		d("[QT] /"..WF_QuestTools.AddonAbbrev().." track # << tracks specific quest")		return	end	if text == "abandon" or text == "a" then		WF_QuestTools.Abandon()		return	end	if text == "blacklist" or text == "bl" then		WF_QuestTools.BlackList()		return	end	if text == "share" or text == "s" then		WF_QuestTools.Share()		return	end	if text == "whitelist" or text == "wl" then		WF_QuestTools.WhiteList()		return	end	if text == "tracker" then		WF_QuestTools.UI.QuestTracker()		return	end	if text == "derp" then		-- local frame = WF_FRAMES.__NewTopLevel("WF_GUIROOT_PADLEFT")			-- :SetDimensions( 300, GuiRoot:GetHeight() )		-- .__END		-- GuiRoot:SetAnchor( TOPLEFT, frame, TOPRIGHT, 0, 0 )		ZO_QuestJournal:ToggleHidden()		for x = 1, ZO_QuestJournal:GetNumChildren(), 1 do			ZO_QuestJournal:GetChild(x):SetHidden(false)		end	end	if string.find(text,"track ") then		text = string.lower(text.."")		text = text:gsub("track ","")		WF_QuestTools.Track(text)		return	end	if string.find(text, "t ") then		text = string.lower(text.."")		text = text:gsub("t ","")		WF_QuestTools.Track(text)		return	end	if text == "clear blacklist" then		WF_QuestTools.QuestsToAbandon = {}		d("[QT] /reloadui  to commit the changes")		return	end	if text == "clear whitelist" then		WF_QuestTools.QuestsToShare = {}		d("[QT] /reloadui  to commit the changes")		return	end	if text == "always share" then		if WF_QuestTools.UISettings.SetToAlwaysShare then			WF_QuestTools.UISettings.SetToAlwaysShare = false			d("[QT] Always Share = off")		else			WF_QuestTools.UISettings.SetToAlwaysShare = true			d("[QT] Always Share = on")		end		return	end	if text == "always track" then		if WF_QuestTools.UISettings.SetToAlwaysTrack then			WF_QuestTools.UISettings.SetToAlwaysTrack = false			d("[QT] Always Track = off")		else			WF_QuestTools.UISettings.SetToAlwaysTrack = true			d("[QT] Always Track = on")		end		return	end	if text == "list" then		WF_QuestTools.ListAll()	end	local parseText = string.lower(text.."")	if string.find(parseText,"find") then		WF_QuestTools.Find(text)	endend